/*
This is grep command
*/

#include<stdio.h>
#include<malloc.h>
#include<stdlib.h>
#include<string.h>

#define KRED  "\x1B[31m"
#define KNRM  "\x1B[0m"

int main(int argc, char *argv[]){
	
	if(argc != 3){	
		printf("USAGE: Use only two arguments, the text you want to search followed by the filename in which the text is to be searched\n");
		return 0;
	}

	FILE *file = fopen(argv[2], "r");
	        /* fopen returns 0, the NULL pointer, on failure */
        if ( file == 0 )
        {
            printf( "Could not open file\n" );
        }
        else 
        {
            int i, j, x, len;
	    char **lines = (char **)malloc(sizeof(char *));
	    char *temp = (char *)malloc(sizeof(char)*strlen(argv[1]));
	    char tempChar;
            /* read one character at a time from file, stopping at EOF, which
               indicates the end of the file.  Note that the idiom of "assign
               to a variable, check the value" used below works because
               the assignment statement evaluates to the value assigned. */
	
		for(i=0;x!=EOF;i++)
		{
			
			*(lines+i) = (char *)malloc( sizeof(char));
			for( j=0;(x=fgetc(file)) != EOF;j++)
			{
				
				*(*(lines+i)+j) = x;
				*(lines+i) = (char *)realloc( *(lines+i) , (j+3) * sizeof(char));
				//printf("%c",*(*(lines+i)+j));
				if(x == '\n')
				{	*(*(lines+i)+j+1) = '\0';
					lines  = (char **)realloc( lines , (i+2) * sizeof(char *));
					break; 
				}
			}			
			
			

		}

		lines[i-1]=NULL;
		len  = i-1;
		
		for(i=0;i<len;i++)
		{
			
			temp = strstr(*(lines+i), argv[1]);
			if(temp)
			{
				for(j=0;j < strlen(*(lines+i));j++)
				{	
					if(temp == (*(lines+i)+j))
						printf("%s", KRED);	
						
					if((temp + strlen(argv[1]))==(*(lines+i)+j))
						printf("%s", KNRM);
					
					printf("%c", *(*(lines+i)+j));
					//tempChar = *(*(lines+i)+j);

					//if((31<tempChar)||(tempChar<127)||(tempChar==10))
					//	printf("%c", tempChar);
				}
			}

			//printf("%s", lines[i]);
			
		}
		
            fclose( file );
        }
  

	return 0;
}


